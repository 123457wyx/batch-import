--- kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/PropertyStore.java	2012-10-22 03:23:00.000000000 +0200
+++ /Users/mh/java/neo/batchperformance/src/main/java/org/neo4j/kernel/impl/nioneo/store/PropertyStore.java	2012-10-22 03:21:20.000000000 +0200
@@ -233,8 +233,10 @@
 
             // Then go through the blocks
             int longsAppended = 0; // For marking the end of blocks
-            for ( PropertyBlock block : record.getPropertyBlocks() )
-            {
+            List<PropertyBlock> propertyBlocks = record.getPropertyBlocks();
+            int propertyBlockCount = propertyBlocks.size();
+            for (int i = 0; i < propertyBlockCount; i++) {
+                PropertyBlock block = propertyBlocks.get(i);
                 long[] propBlockValues = block.getValueBlocks();
                 for ( int k = 0; k < propBlockValues.length; k++ )
                 {
@@ -274,8 +276,9 @@
 
     private void updateDynamicRecords( List<DynamicRecord> records )
     {
-        for (DynamicRecord valueRecord : records)
-        {
+        int count = records.size();
+        for (int i = 0; i < count; i++) {
+            DynamicRecord valueRecord = records.get(i);
             if ( valueRecord.getType() == PropertyType.STRING.intValue() )
             {
                 stringPropertyStore.updateRecord( valueRecord );
@@ -672,6 +675,15 @@
         return list;
     }
 
+    @Override
+    public void logAllWindowPoolStats( StringLogger.LineLogger logger )
+    {
+        super.logAllWindowPoolStats( logger );
+        propertyIndexStore.logAllWindowPoolStats( logger );
+        logger.logLine( stringPropertyStore.getWindowPoolStats().toString() );
+        logger.logLine( arrayPropertyStore.getWindowPoolStats().toString() );
+    }
+
     public int getStringBlockSize()
     {
         return stringPropertyStore.getBlockSize();
